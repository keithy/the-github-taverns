#HM trigger="pom.xml"
name: Builder-Maven
on:
  workflow_dispatch:
    inputs:
      pipeline:
        required: true
      ref:
        required: true
      runner:
        required: false
      env:
        required: false
jobs:
  build:
    runs-on: ${{ inputs.runner || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Import env
        run: |
          echo '${{ inputs.env }}' | jq -r 'to_entries[]|"\(.key)=\(.value)"' >> "$GITHUB_ENV"
          builder_name="${GITHUB_WORKFLOW%.hm.yml}"
          {
            echo "BUILDER=$builder_name"
            echo "TECH=${builder_name#*-}"
          } >> "$GITHUB_ENV"

      - name: Pre-build hooks
        run: |
          set -euo pipefail
          find hooks/pre-build.d hooks/${TECH}/pre-build.d -type f -perm -u+x 2>/dev/null -print0 | xargs -0 -r -n1 sh -c '"$0"'

      - name: mvn validate
        run: |
          set -euo pipefail
          mvn -f "${{ inputs.pipeline }}/pom.xml" -B -U -ntp -q validate

      - name: mvn package
        run: |
          set -euo pipefail
          mvn -f "${{ inputs.pipeline }}/pom.xml" -B -U -ntp package

      - name: mvn test
        run: |
          set -euo pipefail
          mvn -f "${{ inputs.pipeline }}/pom.xml" -B -U -ntp -DskipTests=false test

      - name: Post-build hooks
        run: |
          set -euo pipefail
          find hooks/post-build.d hooks/${TECH}/post-build.d -type f -perm -u+x 2>/dev/null -print0 | xargs -0 -r -n1 sh -c '"$0"'

      - name: Prepare payload
        run: |
          set -euo pipefail
          env_json=$(awk -F= '/=/{print $1}' "$GITHUB_ENV" | jq -Rn '[inputs] as $k | reduce $k[] as $x ({}; . + {($x): env[$x]})')
          sed -i '/^env_json=/d' "$GITHUB_ENV"
          echo "env_json=$env_json" >> "$GITHUB_ENV"

      - name: Harbour Master Dispatch
        uses: ./.github/workflows/harbour-master.hm.yml
        with:
          pipeline: ${{ inputs.pipeline }}
          ref: ${{ inputs.ref }}
          env: ${{ env.env_json }}
